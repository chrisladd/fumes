//
//  CBTuningDiagram.m
//
//  Created on Jan 8, 2020.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

@import UIKit;
#import "CBTuningDiagram.h"



@implementation CBTuningDiagram


#pragma mark - Canvas Drawings

//! guitar-model

+ (void)drawGuitar_vertical {
    [CBTuningDiagram drawGuitar_verticalWithFrame:CGRectMake(0, 0, 85, 229) resizing:CBTuningDiagramResizingBehaviorAspectFit];
}
+ (void)drawGuitar_verticalWithFrame:(CGRect)targetFrame resizing:(CBTuningDiagramResizingBehavior)resizing {
    //! General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();
    
    //! Resize to Target Frame
    CGContextSaveGState(context);
    CGRect resizedFrame = CBTuningDiagramResizingBehaviorApply(resizing, CGRectMake(0, 0, 85, 229), targetFrame);
    CGContextTranslateCTM(context, resizedFrame.origin.x, resizedFrame.origin.y);
    CGContextScaleCTM(context, resizedFrame.size.width / 85, resizedFrame.size.height / 229);
    
    //! _Group
    {
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 42.5, 112.5);
        CGContextRotateCTM(context, 270 * M_PI/180);
        CGContextTranslateCTM(context, -108.5, -42.5);
        
        //! _Combined Shape
        UIBezierPath *combinedShape = [UIBezierPath bezierPath];
        [combinedShape moveToPoint:CGPointMake(20.08, 0)];
        [combinedShape addCurveToPoint:CGPointMake(24.27, 0.44) controlPoint1:CGPointMake(21.52, 0) controlPoint2:CGPointMake(22.92, 0.15)];
        [combinedShape addLineToPoint:CGPointMake(102, 1.26)];
        [combinedShape addLineToPoint:CGPointMake(102, 39.26)];
        [combinedShape addLineToPoint:CGPointMake(15.28, 41)];
        [combinedShape addLineToPoint:CGPointMake(15.28, 39.81)];
        [combinedShape addCurveToPoint:CGPointMake(0, 20.19) controlPoint1:CGPointMake(6.51, 37.64) controlPoint2:CGPointMake(0, 29.68)];
        [combinedShape addCurveToPoint:CGPointMake(15.28, 0.58) controlPoint1:CGPointMake(0, 10.7) controlPoint2:CGPointMake(6.51, 2.74)];
        [combinedShape addLineToPoint:CGPointMake(15.28, 0.35)];
        [combinedShape addLineToPoint:CGPointMake(16.3, 0.36)];
        [combinedShape addCurveToPoint:CGPointMake(20.08, 0) controlPoint1:CGPointMake(17.52, 0.12) controlPoint2:CGPointMake(18.79, 0)];
        [combinedShape closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 0, 22);
        combinedShape.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.36 alpha:1] setFill];
        [combinedShape fill];
        CGContextRestoreGState(context);
        
        //! fret2
        UIBezierPath *fret2 = [UIBezierPath bezierPath];
        [fret2 moveToPoint:CGPointMake(0.67, 0.93)];
        [fret2 addLineToPoint:CGPointMake(0, 39.5)];
        [fret2 addCurveToPoint:CGPointMake(0.95, 40.48) controlPoint1:CGPointMake(-0.01, 40.03) controlPoint2:CGPointMake(0.42, 40.47)];
        [fret2 addCurveToPoint:CGPointMake(0.97, 40.48) controlPoint1:CGPointMake(0.96, 40.48) controlPoint2:CGPointMake(0.96, 40.48)];
        [fret2 addLineToPoint:CGPointMake(0.97, 40.48)];
        [fret2 addCurveToPoint:CGPointMake(1.97, 39.5) controlPoint1:CGPointMake(1.52, 40.48) controlPoint2:CGPointMake(1.96, 40.04)];
        [fret2 addLineToPoint:CGPointMake(2.53, 0.93)];
        [fret2 addCurveToPoint:CGPointMake(1.63, 0) controlPoint1:CGPointMake(2.53, 0.42) controlPoint2:CGPointMake(2.13, 0.01)];
        [fret2 addCurveToPoint:CGPointMake(1.61, 0) controlPoint1:CGPointMake(1.62, 0) controlPoint2:CGPointMake(1.62, 0)];
        [fret2 addCurveToPoint:CGPointMake(0.67, 0.93) controlPoint1:CGPointMake(1.1, 0) controlPoint2:CGPointMake(0.68, 0.41)];
        [fret2 closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 40.67, 42.14);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -1.28, -20.24);
        fret2.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [fret2 fill];
        CGContextRestoreGState(context);
        
        //! fret1
        UIBezierPath *fret1 = [UIBezierPath bezierPath];
        [fret1 moveToPoint:CGPointMake(0.67, 0.93)];
        [fret1 addLineToPoint:CGPointMake(0, 38.69)];
        [fret1 addCurveToPoint:CGPointMake(0.95, 39.67) controlPoint1:CGPointMake(-0.01, 39.22) controlPoint2:CGPointMake(0.42, 39.66)];
        [fret1 addCurveToPoint:CGPointMake(0.97, 39.67) controlPoint1:CGPointMake(0.96, 39.67) controlPoint2:CGPointMake(0.96, 39.67)];
        [fret1 addLineToPoint:CGPointMake(0.97, 39.67)];
        [fret1 addCurveToPoint:CGPointMake(1.97, 38.69) controlPoint1:CGPointMake(1.52, 39.67) controlPoint2:CGPointMake(1.96, 39.23)];
        [fret1 addLineToPoint:CGPointMake(2.53, 0.93)];
        [fret1 addCurveToPoint:CGPointMake(1.63, 0) controlPoint1:CGPointMake(2.53, 0.42) controlPoint2:CGPointMake(2.13, 0.01)];
        [fret1 addCurveToPoint:CGPointMake(1.61, 0) controlPoint1:CGPointMake(1.62, 0) controlPoint2:CGPointMake(1.62, 0)];
        [fret1 addCurveToPoint:CGPointMake(0.67, 0.93) controlPoint1:CGPointMake(1.1, 0) controlPoint2:CGPointMake(0.68, 0.41)];
        [fret1 closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 70.95, 42.18);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -1.28, -19.84);
        fret1.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [fret1 fill];
        CGContextRestoreGState(context);
        
        //! tuner1
        UIBezierPath *tuner1 = [UIBezierPath bezierPath];
        [tuner1 moveToPoint:CGPointMake(9.96, 12.92)];
        [tuner1 addLineToPoint:CGPointMake(3.91, 12.92)];
        [tuner1 addLineToPoint:CGPointMake(4.51, 9.98)];
        [tuner1 addLineToPoint:CGPointMake(0.86, 8.82)];
        [tuner1 addCurveToPoint:CGPointMake(0.16, 7.9) controlPoint1:CGPointMake(0.45, 8.69) controlPoint2:CGPointMake(0.18, 8.32)];
        [tuner1 addLineToPoint:CGPointMake(0, 3.35)];
        [tuner1 addCurveToPoint:CGPointMake(0.43, 2.49) controlPoint1:CGPointMake(-0.01, 3.01) controlPoint2:CGPointMake(0.15, 2.68)];
        [tuner1 addCurveToPoint:CGPointMake(7.08, 0.02) controlPoint1:CGPointMake(3.04, 0.68) controlPoint2:CGPointMake(5.26, -0.14)];
        [tuner1 addCurveToPoint:CGPointMake(12.99, 2.25) controlPoint1:CGPointMake(9.97, 0.28) controlPoint2:CGPointMake(12.73, 2)];
        [tuner1 addCurveToPoint:CGPointMake(13.46, 8.61) controlPoint1:CGPointMake(13.26, 2.5) controlPoint2:CGPointMake(13.46, 7.96)];
        [tuner1 addCurveToPoint:CGPointMake(9.2, 10.34) controlPoint1:CGPointMake(13.46, 9.03) controlPoint2:CGPointMake(12.04, 9.61)];
        [tuner1 addLineToPoint:CGPointMake(9.96, 12.92)];
        [tuner1 closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 137.04, 9.24);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -6.74, -6.46);
        tuner1.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:1 alpha:0.23] setFill];
        [tuner1 fill];
        CGContextRestoreGState(context);
        
        //! tuner1 copy 3
        UIBezierPath *tuner1Copy3 = [UIBezierPath bezierPath];
        [tuner1Copy3 moveToPoint:CGPointMake(9.96, 12.92)];
        [tuner1Copy3 addLineToPoint:CGPointMake(3.91, 12.92)];
        [tuner1Copy3 addLineToPoint:CGPointMake(4.51, 9.98)];
        [tuner1Copy3 addLineToPoint:CGPointMake(0.86, 8.82)];
        [tuner1Copy3 addCurveToPoint:CGPointMake(0.16, 7.9) controlPoint1:CGPointMake(0.45, 8.69) controlPoint2:CGPointMake(0.18, 8.32)];
        [tuner1Copy3 addLineToPoint:CGPointMake(0, 3.35)];
        [tuner1Copy3 addCurveToPoint:CGPointMake(0.43, 2.49) controlPoint1:CGPointMake(-0.01, 3.01) controlPoint2:CGPointMake(0.15, 2.68)];
        [tuner1Copy3 addCurveToPoint:CGPointMake(7.08, 0.02) controlPoint1:CGPointMake(3.04, 0.68) controlPoint2:CGPointMake(5.26, -0.14)];
        [tuner1Copy3 addCurveToPoint:CGPointMake(12.99, 2.25) controlPoint1:CGPointMake(9.97, 0.28) controlPoint2:CGPointMake(12.73, 2)];
        [tuner1Copy3 addCurveToPoint:CGPointMake(13.46, 8.61) controlPoint1:CGPointMake(13.26, 2.5) controlPoint2:CGPointMake(13.46, 7.96)];
        [tuner1Copy3 addCurveToPoint:CGPointMake(9.2, 10.34) controlPoint1:CGPointMake(13.46, 9.03) controlPoint2:CGPointMake(12.04, 9.61)];
        [tuner1Copy3 addLineToPoint:CGPointMake(9.96, 12.92)];
        [tuner1Copy3 closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 167.04, 76.24);
        CGContextScaleCTM(context, 1, -1);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -6.74, -6.46);
        tuner1Copy3.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:1 alpha:0.23] setFill];
        [tuner1Copy3 fill];
        CGContextRestoreGState(context);
        
        //! tuner1 copy 2
        UIBezierPath *tuner1Copy2 = [UIBezierPath bezierPath];
        [tuner1Copy2 moveToPoint:CGPointMake(9.96, 12.92)];
        [tuner1Copy2 addLineToPoint:CGPointMake(3.91, 12.92)];
        [tuner1Copy2 addLineToPoint:CGPointMake(4.51, 9.98)];
        [tuner1Copy2 addLineToPoint:CGPointMake(0.86, 8.82)];
        [tuner1Copy2 addCurveToPoint:CGPointMake(0.16, 7.9) controlPoint1:CGPointMake(0.45, 8.69) controlPoint2:CGPointMake(0.18, 8.32)];
        [tuner1Copy2 addLineToPoint:CGPointMake(0, 3.35)];
        [tuner1Copy2 addCurveToPoint:CGPointMake(0.43, 2.49) controlPoint1:CGPointMake(-0.01, 3.01) controlPoint2:CGPointMake(0.15, 2.68)];
        [tuner1Copy2 addCurveToPoint:CGPointMake(7.08, 0.02) controlPoint1:CGPointMake(3.04, 0.68) controlPoint2:CGPointMake(5.26, -0.14)];
        [tuner1Copy2 addCurveToPoint:CGPointMake(12.99, 2.25) controlPoint1:CGPointMake(9.97, 0.28) controlPoint2:CGPointMake(12.73, 2)];
        [tuner1Copy2 addCurveToPoint:CGPointMake(13.46, 8.61) controlPoint1:CGPointMake(13.26, 2.5) controlPoint2:CGPointMake(13.46, 7.96)];
        [tuner1Copy2 addCurveToPoint:CGPointMake(9.2, 10.34) controlPoint1:CGPointMake(13.46, 9.03) controlPoint2:CGPointMake(12.04, 9.61)];
        [tuner1Copy2 addLineToPoint:CGPointMake(9.96, 12.92)];
        [tuner1Copy2 closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 194.04, 8.24);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -6.74, -6.46);
        tuner1Copy2.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:1 alpha:0.23] setFill];
        [tuner1Copy2 fill];
        CGContextRestoreGState(context);
        
        //! tuner2
        UIBezierPath *tuner2 = [UIBezierPath bezierPath];
        [tuner2 moveToPoint:CGPointMake(2.61, 0)];
        [tuner2 addLineToPoint:CGPointMake(2.61, 2.91)];
        [tuner2 addCurveToPoint:CGPointMake(0, 5.53) controlPoint1:CGPointMake(0.87, 4.01) controlPoint2:CGPointMake(0, 4.89)];
        [tuner2 addCurveToPoint:CGPointMake(0, 11.66) controlPoint1:CGPointMake(0, 6.5) controlPoint2:CGPointMake(0, 10.78)];
        [tuner2 addCurveToPoint:CGPointMake(4.96, 14.31) controlPoint1:CGPointMake(0, 12.53) controlPoint2:CGPointMake(4.65, 14.31)];
        [tuner2 addCurveToPoint:CGPointMake(7.43, 13.37) controlPoint1:CGPointMake(5.17, 14.31) controlPoint2:CGPointMake(5.99, 14)];
        [tuner2 addCurveToPoint:CGPointMake(9.89, 9.38) controlPoint1:CGPointMake(9.07, 10.97) controlPoint2:CGPointMake(9.89, 9.64)];
        [tuner2 addCurveToPoint:CGPointMake(9.26, 3.53) controlPoint1:CGPointMake(9.89, 9.13) controlPoint2:CGPointMake(9.68, 7.17)];
        [tuner2 addLineToPoint:CGPointMake(8.06, 2.53)];
        [tuner2 addLineToPoint:CGPointMake(8.06, 0)];
        [tuner2 addLineToPoint:CGPointMake(2.61, 0)];
        [tuner2 closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 138.35, 75.44);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -4.94, -7.15);
        tuner2.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:1 alpha:0.23] setFill];
        [tuner2 fill];
        CGContextRestoreGState(context);
        
        //! tuner2 copy 2
        UIBezierPath *tuner2Copy2 = [UIBezierPath bezierPath];
        [tuner2Copy2 moveToPoint:CGPointMake(2.61, 0)];
        [tuner2Copy2 addLineToPoint:CGPointMake(2.61, 2.91)];
        [tuner2Copy2 addCurveToPoint:CGPointMake(0, 5.53) controlPoint1:CGPointMake(0.87, 4.01) controlPoint2:CGPointMake(0, 4.89)];
        [tuner2Copy2 addCurveToPoint:CGPointMake(0, 11.66) controlPoint1:CGPointMake(0, 6.5) controlPoint2:CGPointMake(0, 10.78)];
        [tuner2Copy2 addCurveToPoint:CGPointMake(4.96, 14.31) controlPoint1:CGPointMake(0, 12.53) controlPoint2:CGPointMake(4.65, 14.31)];
        [tuner2Copy2 addCurveToPoint:CGPointMake(7.43, 13.37) controlPoint1:CGPointMake(5.17, 14.31) controlPoint2:CGPointMake(5.99, 14)];
        [tuner2Copy2 addCurveToPoint:CGPointMake(9.89, 9.38) controlPoint1:CGPointMake(9.07, 10.97) controlPoint2:CGPointMake(9.89, 9.64)];
        [tuner2Copy2 addCurveToPoint:CGPointMake(9.26, 3.53) controlPoint1:CGPointMake(9.89, 9.13) controlPoint2:CGPointMake(9.68, 7.17)];
        [tuner2Copy2 addLineToPoint:CGPointMake(8.06, 2.53)];
        [tuner2Copy2 addLineToPoint:CGPointMake(8.06, 0)];
        [tuner2Copy2 addLineToPoint:CGPointMake(2.61, 0)];
        [tuner2Copy2 closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 167.35, 7.44);
        CGContextScaleCTM(context, 1, -1);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -4.94, -7.15);
        tuner2Copy2.usesEvenOddFillRule = YES;
        [UIColor.whiteColor setFill];
        [tuner2Copy2 fill];
        CGContextRestoreGState(context);
        
        //! tuner2 copy
        UIBezierPath *tuner2Copy = [UIBezierPath bezierPath];
        [tuner2Copy moveToPoint:CGPointMake(2.61, 0)];
        [tuner2Copy addLineToPoint:CGPointMake(2.61, 2.91)];
        [tuner2Copy addCurveToPoint:CGPointMake(0, 5.53) controlPoint1:CGPointMake(0.87, 4.01) controlPoint2:CGPointMake(0, 4.89)];
        [tuner2Copy addCurveToPoint:CGPointMake(0, 11.66) controlPoint1:CGPointMake(0, 6.5) controlPoint2:CGPointMake(0, 10.78)];
        [tuner2Copy addCurveToPoint:CGPointMake(4.96, 14.31) controlPoint1:CGPointMake(0, 12.53) controlPoint2:CGPointMake(4.65, 14.31)];
        [tuner2Copy addCurveToPoint:CGPointMake(7.43, 13.37) controlPoint1:CGPointMake(5.17, 14.31) controlPoint2:CGPointMake(5.99, 14)];
        [tuner2Copy addCurveToPoint:CGPointMake(9.89, 9.38) controlPoint1:CGPointMake(9.07, 10.97) controlPoint2:CGPointMake(9.89, 9.64)];
        [tuner2Copy addCurveToPoint:CGPointMake(9.26, 3.53) controlPoint1:CGPointMake(9.89, 9.13) controlPoint2:CGPointMake(9.68, 7.17)];
        [tuner2Copy addLineToPoint:CGPointMake(8.06, 2.53)];
        [tuner2Copy addLineToPoint:CGPointMake(8.06, 0)];
        [tuner2Copy addLineToPoint:CGPointMake(2.61, 0)];
        [tuner2Copy closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 194.35, 77.44);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -4.94, -7.15);
        tuner2Copy.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:1 alpha:0.23] setFill];
        [tuner2Copy fill];
        CGContextRestoreGState(context);
        
        //! headstock
        UIBezierPath *headstock = [UIBezierPath bezierPath];
        [headstock moveToPoint:CGPointMake(0.47, 8.96)];
        [headstock addCurveToPoint:CGPointMake(3.64, 8.99) controlPoint1:CGPointMake(1.81, 8.97) controlPoint2:CGPointMake(2.87, 8.98)];
        [headstock addCurveToPoint:CGPointMake(9.41, 6.82) controlPoint1:CGPointMake(4.8, 9) controlPoint2:CGPointMake(5.16, 9.28)];
        [headstock addCurveToPoint:CGPointMake(18.9, 2.05) controlPoint1:CGPointMake(12.15, 5.23) controlPoint2:CGPointMake(15.3, 3.67)];
        [headstock addCurveToPoint:CGPointMake(19.26, 1.93) controlPoint1:CGPointMake(19.02, 1.99) controlPoint2:CGPointMake(19.14, 1.95)];
        [headstock addCurveToPoint:CGPointMake(19.58, 1.88) controlPoint1:CGPointMake(19.35, 1.91) controlPoint2:CGPointMake(19.45, 1.9)];
        [headstock addLineToPoint:CGPointMake(102.6, 0)];
        [headstock addCurveToPoint:CGPointMake(107.71, 4.89) controlPoint1:CGPointMake(105.36, -0.06) controlPoint2:CGPointMake(107.65, 2.13)];
        [headstock addCurveToPoint:CGPointMake(107.71, 5.19) controlPoint1:CGPointMake(107.71, 4.99) controlPoint2:CGPointMake(107.71, 5.09)];
        [headstock addLineToPoint:CGPointMake(105.79, 54.77)];
        [headstock addCurveToPoint:CGPointMake(100.6, 59.57) controlPoint1:CGPointMake(105.68, 57.52) controlPoint2:CGPointMake(103.36, 59.67)];
        [headstock addCurveToPoint:CGPointMake(100.44, 59.56) controlPoint1:CGPointMake(100.55, 59.57) controlPoint2:CGPointMake(100.49, 59.56)];
        [headstock addLineToPoint:CGPointMake(20, 53.97)];
        [headstock addLineToPoint:CGPointMake(20, 53.97)];
        [headstock addCurveToPoint:CGPointMake(19.52, 53.9) controlPoint1:CGPointMake(19.93, 53.95) controlPoint2:CGPointMake(19.77, 53.93)];
        [headstock addCurveToPoint:CGPointMake(18.76, 53.62) controlPoint1:CGPointMake(19.15, 53.85) controlPoint2:CGPointMake(18.93, 53.71)];
        [headstock addCurveToPoint:CGPointMake(5.12, 47.37) controlPoint1:CGPointMake(12.55, 49.9) controlPoint2:CGPointMake(8, 47.82)];
        [headstock addCurveToPoint:CGPointMake(0, 46.46) controlPoint1:CGPointMake(2.16, 46.91) controlPoint2:CGPointMake(0.45, 46.61)];
        [headstock addLineToPoint:CGPointMake(0.47, 8.96)];
        [headstock closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 162.25, 43.75);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -53.96, -30.02);
        headstock.usesEvenOddFillRule = YES;
        [[UIColor colorWithHue:0.067 saturation:0.102 brightness:0.384 alpha:1] setFill];
        [headstock fill];
        CGContextRestoreGState(context);
        
        //! nut 2
        UIBezierPath *nut2 = [UIBezierPath bezierPath];
        [nut2 moveToPoint:CGPointMake(0, 1)];
        [nut2 addLineToPoint:CGPointMake(0, 37)];
        [nut2 addCurveToPoint:CGPointMake(1, 38) controlPoint1:CGPointMake(-0, 37.55) controlPoint2:CGPointMake(0.45, 38)];
        [nut2 addCurveToPoint:CGPointMake(1, 38) controlPoint1:CGPointMake(1, 38) controlPoint2:CGPointMake(1, 38)];
        [nut2 addLineToPoint:CGPointMake(5.96, 38)];
        [nut2 addCurveToPoint:CGPointMake(6.96, 37) controlPoint1:CGPointMake(6.52, 38) controlPoint2:CGPointMake(6.96, 37.55)];
        [nut2 addLineToPoint:CGPointMake(7, 1.19)];
        [nut2 addCurveToPoint:CGPointMake(6.04, 0.19) controlPoint1:CGPointMake(7, 0.65) controlPoint2:CGPointMake(6.58, 0.21)];
        [nut2 addLineToPoint:CGPointMake(1.04, 0)];
        [nut2 addCurveToPoint:CGPointMake(0, 0.96) controlPoint1:CGPointMake(0.49, -0.02) controlPoint2:CGPointMake(0.02, 0.41)];
        [nut2 addCurveToPoint:CGPointMake(0, 1) controlPoint1:CGPointMake(0, 0.98) controlPoint2:CGPointMake(0, 0.99)];
        [nut2 closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 102, 23);
        nut2.usesEvenOddFillRule = YES;
        [[UIColor colorWithHue:1 saturation:0.018 brightness:0.867 alpha:1] setFill];
        [nut2 fill];
        CGContextRestoreGState(context);
        
        //! _beg2_bottom
        UIBezierPath *beg2_bottom = [UIBezierPath bezierPath];
        [beg2_bottom moveToPoint:CGPointMake(6.06, 12.14)];
        [beg2_bottom addCurveToPoint:CGPointMake(12.12, 6.07) controlPoint1:CGPointMake(9.41, 12.14) controlPoint2:CGPointMake(12.12, 9.43)];
        [beg2_bottom addCurveToPoint:CGPointMake(6.06, 0) controlPoint1:CGPointMake(12.12, 2.72) controlPoint2:CGPointMake(9.41, 0)];
        [beg2_bottom addCurveToPoint:CGPointMake(0, 6.07) controlPoint1:CGPointMake(2.71, 0) controlPoint2:CGPointMake(0, 2.72)];
        [beg2_bottom addCurveToPoint:CGPointMake(6.06, 12.14) controlPoint1:CGPointMake(0, 9.43) controlPoint2:CGPointMake(2.71, 12.14)];
        [beg2_bottom closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 137.77, 59.53);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -6.06, -6.07);
        beg2_bottom.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [beg2_bottom fill];
        CGContextSaveGState(context);
        beg2_bottom.lineWidth = 2;
        CGContextBeginPath(context);
        CGContextAddPath(context, beg2_bottom.CGPath);
        CGContextEOClip(context);
        [[UIColor colorWithWhite:0.592 alpha:1] setStroke];
        [beg2_bottom stroke];
        CGContextRestoreGState(context);
        CGContextRestoreGState(context);
        
        //! beg2_bottom copy
        UIBezierPath *beg2_bottomCopy = [UIBezierPath bezierPath];
        [beg2_bottomCopy moveToPoint:CGPointMake(6.06, 12.14)];
        [beg2_bottomCopy addCurveToPoint:CGPointMake(12.12, 6.07) controlPoint1:CGPointMake(9.41, 12.14) controlPoint2:CGPointMake(12.12, 9.43)];
        [beg2_bottomCopy addCurveToPoint:CGPointMake(6.06, 0) controlPoint1:CGPointMake(12.12, 2.72) controlPoint2:CGPointMake(9.41, 0)];
        [beg2_bottomCopy addCurveToPoint:CGPointMake(0, 6.07) controlPoint1:CGPointMake(2.71, 0) controlPoint2:CGPointMake(0, 2.72)];
        [beg2_bottomCopy addCurveToPoint:CGPointMake(6.06, 12.14) controlPoint1:CGPointMake(0, 9.43) controlPoint2:CGPointMake(2.71, 12.14)];
        [beg2_bottomCopy closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 167.39, 59.62);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -6.06, -6.07);
        beg2_bottomCopy.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [beg2_bottomCopy fill];
        CGContextSaveGState(context);
        beg2_bottomCopy.lineWidth = 2;
        CGContextBeginPath(context);
        CGContextAddPath(context, beg2_bottomCopy.CGPath);
        CGContextEOClip(context);
        [[UIColor colorWithWhite:0.592 alpha:1] setStroke];
        [beg2_bottomCopy stroke];
        CGContextRestoreGState(context);
        CGContextRestoreGState(context);
        
        //! beg2_bottom copy 2
        UIBezierPath *beg2_bottomCopy2 = [UIBezierPath bezierPath];
        [beg2_bottomCopy2 moveToPoint:CGPointMake(6.06, 12.14)];
        [beg2_bottomCopy2 addCurveToPoint:CGPointMake(12.12, 6.07) controlPoint1:CGPointMake(9.41, 12.14) controlPoint2:CGPointMake(12.12, 9.43)];
        [beg2_bottomCopy2 addCurveToPoint:CGPointMake(6.06, 0) controlPoint1:CGPointMake(12.12, 2.72) controlPoint2:CGPointMake(9.41, 0)];
        [beg2_bottomCopy2 addCurveToPoint:CGPointMake(0, 6.07) controlPoint1:CGPointMake(2.71, 0) controlPoint2:CGPointMake(0, 2.72)];
        [beg2_bottomCopy2 addCurveToPoint:CGPointMake(6.06, 12.14) controlPoint1:CGPointMake(0, 9.43) controlPoint2:CGPointMake(2.71, 12.14)];
        [beg2_bottomCopy2 closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 194.39, 60.62);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -6.06, -6.07);
        beg2_bottomCopy2.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [beg2_bottomCopy2 fill];
        CGContextSaveGState(context);
        beg2_bottomCopy2.lineWidth = 2;
        CGContextBeginPath(context);
        CGContextAddPath(context, beg2_bottomCopy2.CGPath);
        CGContextEOClip(context);
        [[UIColor colorWithWhite:0.592 alpha:1] setStroke];
        [beg2_bottomCopy2 stroke];
        CGContextRestoreGState(context);
        CGContextRestoreGState(context);
        
        //! peg1_bottom
        UIBezierPath *peg1_bottom = [UIBezierPath bezierPath];
        [peg1_bottom moveToPoint:CGPointMake(6.06, 12.14)];
        [peg1_bottom addCurveToPoint:CGPointMake(12.12, 6.07) controlPoint1:CGPointMake(9.41, 12.14) controlPoint2:CGPointMake(12.12, 9.43)];
        [peg1_bottom addCurveToPoint:CGPointMake(6.06, 0) controlPoint1:CGPointMake(12.12, 2.72) controlPoint2:CGPointMake(9.41, 0)];
        [peg1_bottom addCurveToPoint:CGPointMake(0, 6.07) controlPoint1:CGPointMake(2.71, 0) controlPoint2:CGPointMake(0, 2.72)];
        [peg1_bottom addCurveToPoint:CGPointMake(6.06, 12.14) controlPoint1:CGPointMake(0, 9.43) controlPoint2:CGPointMake(2.71, 12.14)];
        [peg1_bottom closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 137.39, 23.62);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -6.06, -6.07);
        peg1_bottom.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [peg1_bottom fill];
        CGContextSaveGState(context);
        peg1_bottom.lineWidth = 2;
        CGContextBeginPath(context);
        CGContextAddPath(context, peg1_bottom.CGPath);
        CGContextEOClip(context);
        [[UIColor colorWithWhite:0.592 alpha:1] setStroke];
        [peg1_bottom stroke];
        CGContextRestoreGState(context);
        CGContextRestoreGState(context);
        
        //! peg1_bottom copy
        UIBezierPath *peg1_bottomCopy = [UIBezierPath bezierPath];
        [peg1_bottomCopy moveToPoint:CGPointMake(6.06, 12.14)];
        [peg1_bottomCopy addCurveToPoint:CGPointMake(12.12, 6.07) controlPoint1:CGPointMake(9.41, 12.14) controlPoint2:CGPointMake(12.12, 9.43)];
        [peg1_bottomCopy addCurveToPoint:CGPointMake(6.06, 0) controlPoint1:CGPointMake(12.12, 2.72) controlPoint2:CGPointMake(9.41, 0)];
        [peg1_bottomCopy addCurveToPoint:CGPointMake(0, 6.07) controlPoint1:CGPointMake(2.71, 0) controlPoint2:CGPointMake(0, 2.72)];
        [peg1_bottomCopy addCurveToPoint:CGPointMake(6.06, 12.14) controlPoint1:CGPointMake(0, 9.43) controlPoint2:CGPointMake(2.71, 12.14)];
        [peg1_bottomCopy closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 167.39, 23.62);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -6.06, -6.07);
        peg1_bottomCopy.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [peg1_bottomCopy fill];
        CGContextSaveGState(context);
        peg1_bottomCopy.lineWidth = 2;
        CGContextBeginPath(context);
        CGContextAddPath(context, peg1_bottomCopy.CGPath);
        CGContextEOClip(context);
        [[UIColor colorWithWhite:0.592 alpha:1] setStroke];
        [peg1_bottomCopy stroke];
        CGContextRestoreGState(context);
        CGContextRestoreGState(context);
        
        //! peg1_bottom copy 2
        UIBezierPath *peg1_bottomCopy2 = [UIBezierPath bezierPath];
        [peg1_bottomCopy2 moveToPoint:CGPointMake(6.06, 12.14)];
        [peg1_bottomCopy2 addCurveToPoint:CGPointMake(12.12, 6.07) controlPoint1:CGPointMake(9.41, 12.14) controlPoint2:CGPointMake(12.12, 9.43)];
        [peg1_bottomCopy2 addCurveToPoint:CGPointMake(6.06, 0) controlPoint1:CGPointMake(12.12, 2.72) controlPoint2:CGPointMake(9.41, 0)];
        [peg1_bottomCopy2 addCurveToPoint:CGPointMake(0, 6.07) controlPoint1:CGPointMake(2.71, 0) controlPoint2:CGPointMake(0, 2.72)];
        [peg1_bottomCopy2 addCurveToPoint:CGPointMake(6.06, 12.14) controlPoint1:CGPointMake(0, 9.43) controlPoint2:CGPointMake(2.71, 12.14)];
        [peg1_bottomCopy2 closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 194.39, 23.62);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -6.06, -6.07);
        peg1_bottomCopy2.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [peg1_bottomCopy2 fill];
        CGContextSaveGState(context);
        peg1_bottomCopy2.lineWidth = 2;
        CGContextBeginPath(context);
        CGContextAddPath(context, peg1_bottomCopy2.CGPath);
        CGContextEOClip(context);
        [[UIColor colorWithWhite:0.592 alpha:1] setStroke];
        [peg1_bottomCopy2 stroke];
        CGContextRestoreGState(context);
        CGContextRestoreGState(context);
        
        //! string_6
        UIBezierPath *string_6 = [UIBezierPath bezierPath];
        [string_6 moveToPoint:CGPointZero];
        [string_6 addLineToPoint:CGPointMake(91.75, 1.55)];
        [string_6 addLineToPoint:CGPointMake(126.47, 2.45)];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 74.52, 25.33);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -63.23, -1.22);
        string_6.lineCapStyle = kCGLineCapRound;
        string_6.lineWidth = 4;
        [[UIColor colorWithWhite:1 alpha:0.15] setStroke];
        [string_6 stroke];
        CGContextRestoreGState(context);
        
        //! string_5
        UIBezierPath *string_5 = [UIBezierPath bezierPath];
        [string_5 moveToPoint:CGPointMake(0, 3.73)];
        [string_5 addLineToPoint:CGPointMake(99.21, 5.5)];
        [string_5 addLineToPoint:CGPointMake(164.4, 0)];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 85.62, 29.98);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -82.2, -2.75);
        string_5.lineCapStyle = kCGLineCapRound;
        string_5.lineWidth = 3;
        [UIColor.whiteColor setStroke];
        [string_5 stroke];
        CGContextRestoreGState(context);
        
        //! string_4
        UIBezierPath *string_4 = [UIBezierPath bezierPath];
        [string_4 moveToPoint:CGPointMake(0, 11.34)];
        [string_4 addLineToPoint:CGPointMake(101.77, 12.23)];
        [string_4 addLineToPoint:CGPointMake(196.15, 0)];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 98.48, 33.45);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -98.07, -6.11);
        string_4.lineCapStyle = kCGLineCapRound;
        string_4.lineWidth = 3;
        [[UIColor colorWithWhite:1 alpha:0.15] setStroke];
        [string_4 stroke];
        CGContextRestoreGState(context);
        
        //! string_3
        UIBezierPath *string_3 = [UIBezierPath bezierPath];
        [string_3 moveToPoint:CGPointZero];
        [string_3 addLineToPoint:CGPointMake(101.61, 0.01)];
        [string_3 addLineToPoint:CGPointMake(195.53, 13.14)];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 98.68, 52.61);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -97.77, -6.57);
        string_3.lineCapStyle = kCGLineCapRound;
        string_3.lineWidth = 2.5;
        [[UIColor colorWithWhite:1 alpha:0.15] setStroke];
        [string_3 stroke];
        CGContextRestoreGState(context);
        
        //! string_2
        UIBezierPath *string_2 = [UIBezierPath bezierPath];
        [string_2 moveToPoint:CGPointZero];
        [string_2 addLineToPoint:CGPointMake(13.9, 0.12)];
        [string_2 addLineToPoint:CGPointMake(99.88, 0.14)];
        [string_2 addLineToPoint:CGPointMake(164.96, 5.59)];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 85.34, 55.31);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -82.48, -2.8);
        string_2.lineCapStyle = kCGLineCapRound;
        string_2.lineWidth = 1.5;
        [[UIColor colorWithWhite:1 alpha:0.15] setStroke];
        [string_2 stroke];
        CGContextRestoreGState(context);
        
        //! string_1
        UIBezierPath *string_1 = [UIBezierPath bezierPath];
        [string_1 moveToPoint:CGPointMake(0, 1.38)];
        [string_1 addLineToPoint:CGPointMake(92.71, 1.02)];
        [string_1 addLineToPoint:CGPointMake(128.27, 0)];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 73.87, 58.63);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -64.13, -0.69);
        string_1.lineCapStyle = kCGLineCapRound;
        string_1.lineWidth = 1;
        [[UIColor colorWithWhite:1 alpha:0.15] setStroke];
        [string_1 stroke];
        CGContextRestoreGState(context);
        
        //! peg2_top
        UIBezierPath *peg2_top = [UIBezierPath bezierPath];
        [peg2_top moveToPoint:CGPointMake(3.03, 6.07)];
        [peg2_top addCurveToPoint:CGPointMake(6.06, 3.04) controlPoint1:CGPointMake(4.7, 6.07) controlPoint2:CGPointMake(6.06, 4.71)];
        [peg2_top addCurveToPoint:CGPointMake(3.03, 0) controlPoint1:CGPointMake(6.06, 1.36) controlPoint2:CGPointMake(4.7, 0)];
        [peg2_top addCurveToPoint:CGPointMake(0, 3.04) controlPoint1:CGPointMake(1.36, 0) controlPoint2:CGPointMake(0, 1.36)];
        [peg2_top addCurveToPoint:CGPointMake(3.03, 6.07) controlPoint1:CGPointMake(0, 4.71) controlPoint2:CGPointMake(1.36, 6.07)];
        [peg2_top closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 138.37, 59.32);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -3.03, -3.04);
        peg2_top.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [peg2_top fill];
        CGContextSaveGState(context);
        peg2_top.lineWidth = 2;
        CGContextBeginPath(context);
        CGContextAddPath(context, peg2_top.CGPath);
        CGContextEOClip(context);
        [[UIColor colorWithWhite:0.592 alpha:1] setStroke];
        [peg2_top stroke];
        CGContextRestoreGState(context);
        CGContextRestoreGState(context);
        
        //! peg2_top copy
        UIBezierPath *peg2_topCopy = [UIBezierPath bezierPath];
        [peg2_topCopy moveToPoint:CGPointMake(3.03, 6.07)];
        [peg2_topCopy addCurveToPoint:CGPointMake(6.06, 3.04) controlPoint1:CGPointMake(4.7, 6.07) controlPoint2:CGPointMake(6.06, 4.71)];
        [peg2_topCopy addCurveToPoint:CGPointMake(3.03, 0) controlPoint1:CGPointMake(6.06, 1.36) controlPoint2:CGPointMake(4.7, 0)];
        [peg2_topCopy addCurveToPoint:CGPointMake(0, 3.04) controlPoint1:CGPointMake(1.36, 0) controlPoint2:CGPointMake(0, 1.36)];
        [peg2_topCopy addCurveToPoint:CGPointMake(3.03, 6.07) controlPoint1:CGPointMake(0, 4.71) controlPoint2:CGPointMake(1.36, 6.07)];
        [peg2_topCopy closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 167.8, 59.45);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -3.03, -3.04);
        peg2_topCopy.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [peg2_topCopy fill];
        CGContextSaveGState(context);
        peg2_topCopy.lineWidth = 2;
        CGContextBeginPath(context);
        CGContextAddPath(context, peg2_topCopy.CGPath);
        CGContextEOClip(context);
        [[UIColor colorWithWhite:0.592 alpha:1] setStroke];
        [peg2_topCopy stroke];
        CGContextRestoreGState(context);
        CGContextRestoreGState(context);
        
        //! peg2_top copy 2
        UIBezierPath *peg2_topCopy2 = [UIBezierPath bezierPath];
        [peg2_topCopy2 moveToPoint:CGPointMake(3.03, 6.07)];
        [peg2_topCopy2 addCurveToPoint:CGPointMake(6.06, 3.04) controlPoint1:CGPointMake(4.7, 6.07) controlPoint2:CGPointMake(6.06, 4.71)];
        [peg2_topCopy2 addCurveToPoint:CGPointMake(3.03, 0) controlPoint1:CGPointMake(6.06, 1.36) controlPoint2:CGPointMake(4.7, 0)];
        [peg2_topCopy2 addCurveToPoint:CGPointMake(0, 3.04) controlPoint1:CGPointMake(1.36, 0) controlPoint2:CGPointMake(0, 1.36)];
        [peg2_topCopy2 addCurveToPoint:CGPointMake(3.03, 6.07) controlPoint1:CGPointMake(0, 4.71) controlPoint2:CGPointMake(1.36, 6.07)];
        [peg2_topCopy2 closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 194.8, 60.45);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -3.03, -3.04);
        peg2_topCopy2.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [peg2_topCopy2 fill];
        CGContextSaveGState(context);
        peg2_topCopy2.lineWidth = 2;
        CGContextBeginPath(context);
        CGContextAddPath(context, peg2_topCopy2.CGPath);
        CGContextEOClip(context);
        [[UIColor colorWithWhite:0.592 alpha:1] setStroke];
        [peg2_topCopy2 stroke];
        CGContextRestoreGState(context);
        CGContextRestoreGState(context);
        
        //! peg1_top
        UIBezierPath *peg1_top = [UIBezierPath bezierPath];
        [peg1_top moveToPoint:CGPointMake(3.03, 6.07)];
        [peg1_top addCurveToPoint:CGPointMake(6.06, 3.04) controlPoint1:CGPointMake(4.7, 6.07) controlPoint2:CGPointMake(6.06, 4.71)];
        [peg1_top addCurveToPoint:CGPointMake(3.03, 0) controlPoint1:CGPointMake(6.06, 1.36) controlPoint2:CGPointMake(4.7, 0)];
        [peg1_top addCurveToPoint:CGPointMake(0, 3.04) controlPoint1:CGPointMake(1.36, 0) controlPoint2:CGPointMake(0, 1.36)];
        [peg1_top addCurveToPoint:CGPointMake(3.03, 6.07) controlPoint1:CGPointMake(0, 4.71) controlPoint2:CGPointMake(1.36, 6.07)];
        [peg1_top closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 137.99, 23.42);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -3.03, -3.04);
        peg1_top.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [peg1_top fill];
        CGContextSaveGState(context);
        peg1_top.lineWidth = 2;
        CGContextBeginPath(context);
        CGContextAddPath(context, peg1_top.CGPath);
        CGContextEOClip(context);
        [[UIColor colorWithWhite:0.592 alpha:1] setStroke];
        [peg1_top stroke];
        CGContextRestoreGState(context);
        CGContextRestoreGState(context);
        
        //! peg1_top copy
        UIBezierPath *peg1_topCopy = [UIBezierPath bezierPath];
        [peg1_topCopy moveToPoint:CGPointMake(3.03, 6.07)];
        [peg1_topCopy addCurveToPoint:CGPointMake(6.06, 3.04) controlPoint1:CGPointMake(4.7, 6.07) controlPoint2:CGPointMake(6.06, 4.71)];
        [peg1_topCopy addCurveToPoint:CGPointMake(3.03, 0) controlPoint1:CGPointMake(6.06, 1.36) controlPoint2:CGPointMake(4.7, 0)];
        [peg1_topCopy addCurveToPoint:CGPointMake(0, 3.04) controlPoint1:CGPointMake(1.36, 0) controlPoint2:CGPointMake(0, 1.36)];
        [peg1_topCopy addCurveToPoint:CGPointMake(3.03, 6.07) controlPoint1:CGPointMake(0, 4.71) controlPoint2:CGPointMake(1.36, 6.07)];
        [peg1_topCopy closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 167.8, 23.45);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -3.03, -3.04);
        peg1_topCopy.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [peg1_topCopy fill];
        CGContextSaveGState(context);
        peg1_topCopy.lineWidth = 2;
        CGContextBeginPath(context);
        CGContextAddPath(context, peg1_topCopy.CGPath);
        CGContextEOClip(context);
        [[UIColor colorWithWhite:0.592 alpha:1] setStroke];
        [peg1_topCopy stroke];
        CGContextRestoreGState(context);
        CGContextRestoreGState(context);
        
        //! peg1_top copy 2
        UIBezierPath *peg1_topCopy2 = [UIBezierPath bezierPath];
        [peg1_topCopy2 moveToPoint:CGPointMake(3.03, 6.07)];
        [peg1_topCopy2 addCurveToPoint:CGPointMake(6.06, 3.04) controlPoint1:CGPointMake(4.7, 6.07) controlPoint2:CGPointMake(6.06, 4.71)];
        [peg1_topCopy2 addCurveToPoint:CGPointMake(3.03, 0) controlPoint1:CGPointMake(6.06, 1.36) controlPoint2:CGPointMake(4.7, 0)];
        [peg1_topCopy2 addCurveToPoint:CGPointMake(0, 3.04) controlPoint1:CGPointMake(1.36, 0) controlPoint2:CGPointMake(0, 1.36)];
        [peg1_topCopy2 addCurveToPoint:CGPointMake(3.03, 6.07) controlPoint1:CGPointMake(0, 4.71) controlPoint2:CGPointMake(1.36, 6.07)];
        [peg1_topCopy2 closePath];
        CGContextSaveGState(context);
        CGContextTranslateCTM(context, 194.8, 23.45);
        CGContextRotateCTM(context, 359.5 * M_PI/180);
        CGContextTranslateCTM(context, -3.03, -3.04);
        peg1_topCopy2.usesEvenOddFillRule = YES;
        [[UIColor colorWithWhite:0.847 alpha:1] setFill];
        [peg1_topCopy2 fill];
        CGContextSaveGState(context);
        peg1_topCopy2.lineWidth = 2;
        CGContextBeginPath(context);
        CGContextAddPath(context, peg1_topCopy2.CGPath);
        CGContextEOClip(context);
        [[UIColor colorWithWhite:0.592 alpha:1] setStroke];
        [peg1_topCopy2 stroke];
        CGContextRestoreGState(context);
        CGContextRestoreGState(context);
        
        CGContextRestoreGState(context);
    }
    
    CGContextRestoreGState(context);
}


#pragma mark - Canvas Images

//! guitar-model

+ (UIImage *)imageOfGuitar_vertical {
    static UIImage * image = nil;
    if (image != nil)
        return image;
    
    UIGraphicsBeginImageContextWithOptions(CGSizeMake(85, 229), NO, 0);
    [CBTuningDiagram drawGuitar_vertical];
    image = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    
    return image;
}


#pragma mark - Resizing Behavior

CGRect CBTuningDiagramResizingBehaviorApply(CBTuningDiagramResizingBehavior behavior, CGRect rect, CGRect target) {
    if (CGRectEqualToRect(rect, target) || CGRectEqualToRect(target, CGRectZero)) {
        return rect;
    }
    
    CGSize scales = CGSizeZero;
    scales.width = ABS(target.size.width / rect.size.width);
    scales.height = ABS(target.size.height / rect.size.height);
    
    switch (behavior) {
        case CBTuningDiagramResizingBehaviorAspectFit: {
            scales.width = MIN(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case CBTuningDiagramResizingBehaviorAspectFill: {
            scales.width = MAX(scales.width, scales.height);
            scales.height = scales.width;
            break;
        }
        case CBTuningDiagramResizingBehaviorStretch:
            break;
        
        case CBTuningDiagramResizingBehaviorCenter: {
            scales.width = 1;
            scales.height = 1;
            break;
        }
    }
    
    CGRect result = CGRectStandardize(rect);
    result.size.width *= scales.width;
    result.size.height *= scales.height;
    result.origin.x = target.origin.x + (target.size.width - result.size.width) / 2;
    result.origin.y = target.origin.y + (target.size.height - result.size.height) / 2;
    return result;
}


@end
